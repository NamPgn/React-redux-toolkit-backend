let getAll,get,addPost,deleteProduct,editPost;_450‍.x([["getAllProducts",()=>getAllProducts],["getOne",()=>getOne],["addProduct",()=>addProduct],["delete_",()=>delete_],["editProduct",()=>editProduct]]);_450‍.w("../services/products",[["getAll",["getAll"],function(v){getAll=v}],["get",["get"],function(v){get=v}],["addPost",["addPost"],function(v){addPost=v}],["deleteProduct",["deleteProduct"],function(v){deleteProduct=v}],["editPost",["editPost"],function(v){editPost=v}]]);

       const getAllProducts = async (req, res) => {
  try {
    const data = await getAll();
    res.json({
      data
    });
  } catch (error) {
    return res.status(400).json({
      message: "Lỗi rồi"
    })
  }
}

       const getOne = async (req, res) => {
  try {
    const _id = { _id: req.params.id };
    const data = await get(_id);
    res.json(data);
  } catch (error) {
    _450‍.g.console.log(error)
    return res.status(400).json({
      message: "Không ìm thấy bài viết"
    })
  }
}

       const addProduct = async (req, res) => {
  try {
    const { name, category, price, descriptions } = req.body;
    const { filename } = req.file;
    // const payload=req.body;
    _450‍.g.console.log(req.file);
    const dataAdd = {
      name: name,
      category: category,
      price: price,
      descriptions: descriptions,
      image: `http://localhost:${process.env.PORT}/product/` + filename
    }
    const data = await addPost(dataAdd);
    res.json(data);
  } catch (error) {
    return res.status(400).json({
      message: "Không thêm đc Product"
    })
  }
}

       const delete_ = async (req, res) => {
  try {
    const id = req.params.id;
    const data = await deleteProduct(id);
    console.log("delete suscess")
    res.json(data);
  } catch (error) {
    return res.status(400).json({
      message: "Lỗi rồi"
    })
  }
}

       const editProduct = async (req, res) => {
  try {
    const { name, category, price, descriptions, _id } = req.body;
    const { filename } = req.file;
    const s = req.body;
    _450‍.g.console.log('req.body',s);
    const dataEdit = {
      name: name,
      category: category,
      price: price,
      descriptions: descriptions,
      image: `http://localhost:${process.env.PORT}/product/` + filename
    }
    const data = await editPost(_id, dataEdit);
    _450‍.g.console.log("data", _id, data);
    res.json(data);
  } catch (error) {
    _450‍.g.console.log(error);
    return res.status(400).json({
      message: error
    })
  }
} 